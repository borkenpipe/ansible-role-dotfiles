---
- name: Ensure dotfiles repository is cloned locally.
  git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ dotfiles_repo_local_destination }}"
    version: "{{ dotfiles_repo_version }}"
    accept_hostkey: "{{ dotfiles_repo_accept_hostkey }}"
  become: false

- name: Ensure bashparts repository is cloned locally.
  git:
    repo: "{{ bashparts_repo }}"
    dest: "{{ bashparts_repo_local_destination }}"
    version: "{{ bashparts_repo_version }}"
    accept_hostkey: "{{ bashparts_repo_accept_hostkey }}"
  become: false

- name: Ensure that ~/etc/ exists
  file:
    path: "{{ dotfiles_home }}/etc/"
    state: directory
    mode: 0755
  become: false

- name: Ensure that ~/etc/bashparts exists
  file:
    path: "{{ dotfiles_home }}/etc/bashparts/"
    state: directory
    mode: 0755
  become: false

- name: Ensure all configured bashparts are links.
  command: "ls -F {{ bashparts_home }}/{{ item }}"
  register: existing_dotfile_info
  failed_when: false
  check_mode: false
  changed_when: false
  with_items: "{{ bashparts_files }}"

- name: Remove existing bashparts file if a replacement is being linked.
  file:
    path: "{{ bashparts_home }}/{{ bashparts_files[item.0] }}"
    state: absent
  when: "'@' not in item.1.stdout"
  with_indexed_items: "{{ existing_dotfile_info.results }}"

- name: Link bashparts into home folder.
  file:
    src: "{{ bashparts_repo_local_destination }}/{{ item }}"
    dest: "{{ bashparts_home }}/{{ item }}"
    state: link
  become: false
  with_items: "{{ bashparts_files }}"

